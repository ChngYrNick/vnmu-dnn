server {
  listen 80;
  server_name ${DOMAIN};

  # Let's Encrypt challenge
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # Redirect to HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl http2;
  server_name ${DOMAIN};

  ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

  # SSL configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  
  # Security headers
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  
  # Rate limiting
  limit_req zone=general burst=20 nodelay;

  location = /robots.txt {
    alias /var/www/app/public/assets/robots.txt;
    add_header Cache-Control "public, max-age=3600";
  }

  location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    alias /var/www/app/public/;
    expires 1y;
    add_header Cache-Control "public, immutable";
    try_files $uri =404;
  }

  location ^~ /uploads/ {
    alias /var/www/app/uploads/;
    add_header Cache-Control "public, max-age=3600";
    try_files $uri =404;
  }

  location / {
    proxy_pass         http://app:${port};
    proxy_http_version 1.1;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection $connection_upgrade;
    
    # Proxy buffering
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
  }
}
